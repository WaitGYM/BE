generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String

  // OAuth 전용 필드
  googleId String  @unique
  avatar   String?

  createdAt    DateTime      @default(now())
  reservations Reservation[]
  favorites    Favorite[]    // 즐겨찾기 관계 추가
}

model Equipment {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  imageUrl     String?
  category     String        // 부위별 카테고리 (가슴, 등, 다리, 어깨, 팔, 유산소 등)
  muscleGroup  String?       // 세부 근육 그룹 (선택사항)
  createdAt    DateTime      @default(now())
  reservations Reservation[]
  favorites    Favorite[]    // 즐겨찾기 관계 추가
}

model Favorite {
  id          Int       @id @default(autoincrement())
  userId      Int
  equipmentId Int
  createdAt   DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  equipment Equipment @relation(fields: [equipmentId], references: [id], onDelete: Cascade)

  @@unique([userId, equipmentId]) // 중복 즐겨찾기 방지
}

model Reservation {
  id          Int      @id @default(autoincrement())
  userId      Int
  equipmentId Int
  startAt     DateTime
  endAt       DateTime
  sets        Int      @default(1)
  restMinutes Int      @default(3)
  status      String   @default("BOOKED")

  user      User      @relation(fields: [userId], references: [id])
  equipment Equipment @relation(fields: [equipmentId], references: [id])

  @@index([equipmentId, startAt, endAt])
}